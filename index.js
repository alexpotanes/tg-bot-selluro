import TgApi from 'node-telegram-bot-api';
import {GoogleSpreadsheet} from "google-spreadsheet";
import {JWT} from 'google-auth-library';
import express from 'express';
import cors from 'cors';

const BOT_TOKEN = '7791484578:AAHajxfErWPiaS5ZgYisGD1V98h-RumqXkY';

const GOOGLE_TABLE_ID="1_44kRqwJcY2N3SNeM5xJb-FtSF-zMaftAmvQeukf0Ak"; //"1p7yNo-lUOHlEYBISuASlvxoExirmKFrKI9MfgRO-oz8";
const GOOGLE_PRIVATE_KEY = "-----BEGIN PRIVATE KEY-----\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCzd+Fc/9GuBBdR\n3DP65kKa7884WC59S02srvtdYWS0opRODdEZY1WWQgYgxiKOTMH5zBBYL/zmXLWG\ngCDQGfKJMUvQuTxQ1U0fUypdbuztwCLxDJvQf0GcH2ZhU9bY/EpjWDoXciMtG/f+\nCxJOtOpr3rYS9xlwRCBT0F8dpNo5brVj0GOAakHu+7Z0ci8orpM6xcdw0kh6lS0G\n0kYMEFhT2huPaGSDtNppuTLwlxGuth90MVL/d/+tq5Gpr1fxeMoG5tVcvPLc//Mv\n7gEb+IxtoSpBWHgxlJdD7p14tRMBmkFvJQwIGibQTc66/iQRNy7xtxEdcZ5mArDT\nOTmcVZWtAgMBAAECggEAFVSN/UTtebKESAc1SWCFMY+HkEGQ0vT4iCnq98wL0VlS\naZ2ESPFwunFh85LBCCsw0dzyY1zewM1riM8hN0KiPDKW+XmOpOfZKPw0OJMmx1Iz\nBPXT7hm15VWpEC/MBRGlUL3rd55p9mJQ3QmZVS/0/bmkZ8glJp3+Pp/xMh+GDVW7\nG6hXlg1jGZW8LIv2RDk2LIF9x5O/6fyyIELRM5Dkmu2aWiEETL5M/6VpFtCmv7yx\n4Q14O0Nktz/odR7SO7StSrl+D5/VJOmbpUDgx/Cv832YHaJN49qq0Hzzl10ElqBR\nUKJs/UKIJlMyg3Z3XiaSorOviXsL3dANl283ESbc+QKBgQDxSnTSUWgljKowJBiD\nj/DuNja3j4zAzd2NKfi5McHULAUqDopvzszP12K8hP+6gHJdhC7+k6HThunvvnVB\nM7rBzFXN/qdECuM2AHeKnNe4RVlMd3A6Bi+EhMPPnfWu5AwEfIGWlePM5hjp/3Ye\n8IZTl+HUuIMO2bU0ovakLuBLOQKBgQC+aKGz9Yj4gPRulW4DHLjuhfRN0lETCuYc\nA8PJOyi9VOAy7GIzt+K71coiX/+BskFvzDkj/ni2BM1LBU4TeFt50xAP6sD8sko0\n+kTG4Ds3IHtY3zLbDJsbd6784Ab3V2C8v4IBal+ExLQbHKq5Quf2oPPEw/XrY1JY\nHEi2j4i6FQKBgDS/mTBNOZ5T1PS3P2Cre/kngui4CgYwOwncLhKWTRBMG0jpatws\nclvRczVRQfKMl/PXrMpcjdkHOmb91PZPD7nEKNHipMBcPPWWPovf48zV5EKyLaeR\nqJuoxoHBv27fTb1BVrcLx4QInVOyVClJXaQypNzzBTue3l1GbvLPiJsJAoGAN2HL\nlsJWAqHPdtKz2ufhyk7gDjqcJkPHRmK58a/pW5hyVZ13ur9DjYrTbkgp0xl7+v6V\nqCh+B8NByw5R9UvOn5KKW3bWhyl8eAhLNOVHk/M4rVLOQfRasRSQqzCmFg8uLfgt\n4ieEfOOR10jxR010lsGd5Z9xyfNrogEoDSGWjTkCgYEAutiwlORRZ4p0tIhPNqfY\nvGfaQwtt3dMECFoqwlkXU2XI8oVJ1rfiapc9+UnNho52aUJaZlJ8zRJ+uvrEHYug\nlhTmuyE0u0A6tvU9+SocFvIi2Qm/hJsq2gpXR6x02K0Bn3dpYuMdFXvJt5FdpPXP\nJU0oj3rx4d2xlHNjQuqPJfQ=\n-----END PRIVATE KEY-----\n";
const GOOGLE_CLIENT_EMAIL = "sellurobot@sellurobot.iam.gserviceaccount.com";
const SCOPES = [
    'https://www.googleapis.com/auth/spreadsheets',
    'https://www.googleapis.com/auth/drive.file',
];

const WEB_PORTFOLIO = 'https://stone.wfolio.pro/disk/neroset-portfolio-r975cs';
const WEB_APP_URL = 'https://famous-sable-041562.netlify.app';

const startText = `üëã<b>–ü—Ä–∏–≤–µ—Ç! –í—ã –≤ –ö–æ–Ω—Ç–µ–Ω—Ç-–±–æ—Ç–µ –¥–ª—è —Å–µ–ª–ª–µ—Ä–æ–≤.</b>

<b>–ö–∞–∫ —ç—Ç–æ —É—Å—Ç—Ä–æ–µ–Ω–æ:</b>
  1. –í—ã –æ–ø–ª–∞—á–∏–≤–∞–µ—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É ‚Äî 2500 ‚ÇΩ –º–µ—Å. (–¥–ª—è –ø–µ—Ä–≤—ã—Ö 200 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π ‚Äî <b>1500 ‚ÇΩ –Ω–∞–≤—Å–µ–≥–¥–∞</b>).
  2. –ü–æ–¥–ø–∏—Å–∫–∞ –¥–∞—ë—Ç –¥–æ—Å—Ç—É–ø –∫ –∫–æ–Ω—Ç–µ–Ω—Ç—É <b>–ø–æ —Å–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç–∏</b> –≤ –Ω–∞—à–µ–π –Ω–µ–π—Ä–æ—Å–µ—Ç–∏.
  3. <b>–ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –º–æ–∂–Ω–æ –∑–∞–∫–∞–∑—ã–≤–∞—Ç—å:</b>
    ‚Ä¢ –ê—Ä—Ç–∏–∫—É–ª –ø–æ —Ü–µ–Ω–µ ‚Äî 600 ‚ÇΩ
    ‚Ä¢ –§–æ—Ç–æ –ø–æ —Ü–µ–Ω–µ ‚Äî 40 ‚ÇΩ/—à—Ç.
  4. <b>–î–ª—è –ø—Ä–∏–º–µ—Ä–∞:</b> 10 –∞—Ä—Ç–∏–∫—É–ª–æ–≤ √ó 10 —Ñ–æ—Ç–æ = 10 000 ‚ÇΩ (–≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ —ç—Ç–æ ~40-70 000 ‚ÇΩ).

<b>–í—ã–≥–æ–¥—ã:</b>
    ‚Ä¢ <b>–ú—ã –≤ —Ä—É—á–Ω—É—é –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ–º –ø—Ä–æ—Ü–µ—Å—Å –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç</b>, —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ ¬´—Ç—Ä—ç—à–∞¬ª –∫–∞–∫ –≤ –¥—Ä—É–≥–∏—Ö –±–æ—Ç–∞—Ö.
    ‚Ä¢ –≠–∫–æ–Ω–æ–º–∏—è –≤ 4 - 7—Ä–∞–∑ –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞–º–∏ –∏ —Å—Ç—É–¥–∏—è–º–∏.
    ‚Ä¢ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –±—ã—Å—Ç—Ä–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Ä–∞–∑–Ω—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏.
    ‚Ä¢ –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è 95% —Ç–æ–≤–∞—Ä–∫–∏ (–æ–¥–µ–∂–¥–∞, –º–µ–±–µ–ª—å, –∞–∫—Å–µ—Å—Å—É–∞—Ä—ã
<b>–ß—Ç–æ –¥–∞–ª—å—à–µ? üëá</b>`;
const depositText = `üí≥ –í–Ω–µ—Å–µ–Ω–∏–µ –¥–µ–ø–æ–∑–∏—Ç–∞

 –î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º, –Ω—É–∂–Ω–æ –≤–Ω–µ—Å—Ç–∏ –¥–µ–ø–æ–∑–∏—Ç.
 –î–µ–ø–æ–∑–∏—Ç —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è –∏—Å—Ö–æ–¥—è –∏–∑ —Ç–æ–≥–æ, —Å–∫–æ–ª—å–∫–æ –∞—Ä—Ç–∏–∫—É–ª–æ–≤ –∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –≤–∞–º –Ω—É–∂–Ω–æ.

üëâ –î–∞–≤–∞–π—Ç–µ —Ä–∞—Å—Å—á–∏—Ç–∞–µ–º –≤–∞—à–∏ –ª–∏–º–∏—Ç—ã:
 ‚Ä¢ 1 –∞—Ä—Ç–∏–∫—É–ª = 600 ‚ÇΩ
 ‚Ä¢ 1 —Ñ–æ—Ç–æ = 40 ‚ÇΩ

 –í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞—Ä—Ç–∏–∫—É–ª–æ–≤ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–æ—Ç–æ –Ω–∞ –∫–∞–∂–¥—ã–π –∞—Ä—Ç–∏–∫—É–ª –≤ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä, –∏ —Å–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ—Å—á–∏—Ç–∞–µ—Ç –∏—Ç–æ–≥–æ–≤—É—é —Å—É–º–º—É –¥–µ–ø–æ–∑–∏—Ç–∞.

 –ü–æ—Å–ª–µ —Ä–∞—Å—á—ë—Ç–∞ –≤—ã —Å–º–æ–∂–µ—Ç–µ —Å—Ä–∞–∑—É –≤–Ω–µ—Å—Ç–∏ –¥–µ–ø–æ–∑–∏—Ç –∏ –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –ø–æ —Å–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç–∏`;

const buttonsStart = {
    reply_markup: {
        inline_keyboard: [
            [{text: '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∏–º–µ—Ä—ã —Ä–∞–±–æ—Ç', web_app: {url: WEB_PORTFOLIO}},{text: '–û—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –∏ –Ω–∞—á–∞—Ç—å', callback_data: 'subscribe'}],
        ]
    }
};
const buttonsSub = {
    reply_markup: {
        inline_keyboard: [
            [{text: '–í–Ω–µ—Å—Ç–∏ –¥–µ–ø–æ–∑–∏—Ç', callback_data: 'deposit'}, {text: '–ü–æ–¥–¥–µ—Ä–∂–∫–∞', url: 'https://t.me/Auracaller'}],
        ]
    }
};
const buttonsDeposit = {
    reply_markup: {
        keyboard: [
            [{text: 'üîò  –û—Ç–∫—Ä—ã—Ç—å –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä', web_app: {url: WEB_APP_URL + '/form'}}],
        ]
    }
};
const buttonsTask = {
    reply_markup: {
        keyboard: [
            [
                {text: '–ó–∞–ø–æ–ª–Ω–∏—Ç—å —Ç–∑', web_app: {url: 'https://docs.google.com/forms/d/e/1FAIpQLSdw5pbOVkshGv5P5bje2SxRcZSwmlkqfrJGilUHZrZ00VnT4A/viewform'}},
                {text: '–ü–æ–¥–¥–µ—Ä–∂–∫–∞', callback_data: 'help'}
            ]
        ]
    }
};
let dataTask = {};

const bot = new TgApi(BOT_TOKEN, { polling: true });
const app = express();
app.use(express.json());
app.use(cors());

const serviceAccountAuth = new JWT({
    email: GOOGLE_CLIENT_EMAIL,
    key: GOOGLE_PRIVATE_KEY,
    scopes: SCOPES,
});
const doc = new GoogleSpreadsheet(GOOGLE_TABLE_ID, serviceAccountAuth);

bot.setMyCommands([
    { command: '/start', description: '–ù–∞—á–∞–ª—å–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ' }
]);

const getJsonData = (list) => {
    const headers = list[0];
    return list.slice(1).map(row => {
        const obj = {};
        headers.forEach((header, index) => {
            obj[header] = row[index];
        });
        return obj;
    });
};

const start = async () => {
    bot.on('message', async msg => {
        const text = msg.text;
        const chatId = String(msg.chat.id);

        if (text === '/start') {
            await doc.loadInfo();
            const sheet1 = doc.sheetsByIndex[2];
            const currentDate = new Date(); // –¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞
            let isSubscribe = false;

            const list = await sheet1.getCellsInRange('A:F', { majorDimension: 'ROWS', valueRenderOption: 'FORMATTED_VALUE' } ); // Gets the range containing all data

            const jsonData = getJsonData(list);

            for(let i = 0; i < jsonData.length; i++) {
                if(jsonData[i]["ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"] === chatId) {
                    const initialDate = new Date(jsonData[i]["–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ –ø–æ–¥–ø–∏—Å–∫–∏"]);
                    const diffMilliseconds = currentDate.getTime() - initialDate.getTime();
                    const millisecondsPerDay = 1000 * 60 * 60 * 24;
                    const daysPassed = diffMilliseconds / millisecondsPerDay;
                    isSubscribe = daysPassed < 30;
                }
            }

            if (isSubscribe) {
                await bot.sendMessage(
                  chatId,
                  `–ü–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ –º–æ–∂–µ—Ç–µ –ø–æ–¥—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å, –∞ –∑–∞—Ç–µ–º –æ–ø–ª–∞—Ç–∏—Ç—å —É—Å–ª—É–≥—É`,
                  buttonsSub
                );
            } else {
                await bot.sendMessage(chatId, startText, { parse_mode: 'HTML', ...buttonsStart } );
            }
        }

        if (msg?.web_app_data?.data) {
            try {
                dataTask = JSON.parse(msg.web_app_data.data);
                const { articles, photo } = dataTask;
                const price = (articles * 600) + ((articles * photo) * 40);

                await bot.sendInvoice(
                  chatId,
                  '–í–∞—à –∑–∞–∫–∞–∑',
                  `–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞—Ä—Ç–∏–∫—É–ª–æ–≤: ${articles}                                                           –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–æ—Ç–æ –Ω–∞ –æ–¥–∏–Ω –∞—Ä—Ç–∏–∫—É–ª: ${photo}`,
                  'send-invoice',
                  '390540012:LIVE:78875', //'381764678:TEST:143534',
                  'RUB',
                  [{label: '–ó–∞–∫–∞–∑', amount: price*100 }],
                  {
                      payment_options: {
                          save_payment_method: true,
                      }
                  }
                );
            } catch (e) {
                console.log(e);
            }
        }
    })

    bot.on('callback_query', async msg => {
        const text = msg.data;
        const chatId = msg.message.chat.id;

        if (text === 'subscribe') {
            return bot.sendInvoice(
              chatId,
              '–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Å–µ—Ä–≤–∏—Å',
              "–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–ø–ª–∞—Ç–∏—Ç—å –µ–∂–µ–º–µ—Å—è–Ω—É—é –ø–æ–¥–ø–∏—Å–∫—É 1500—Ä. –û–ø–ª–∞—á–∏–≤–∞—è –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å –æ—Ñ–µ—Ä—Ç–æ–π –∏ –ø–æ–ª–∏—Ç–∏–∫–æ–π –æ–±–∞—Ä–±–æ—Ç–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö",
              'subscribe-invoice',
              '390540012:LIVE:78875', //'381764678:TEST:143534',
              'RUB',
              [{label: '–ü–æ–¥–ø–∏—Å–∫–∞', amount: 150000}],
              {save_payment_method: true}
            );
        }
        if (text === 'deposit') {
            return  bot.sendMessage(chatId, depositText, buttonsDeposit);
        }
        if (text === 'buttonsDeposit') {
            return  bot.sendMessage(chatId, depositText, buttonsSub);
        }
    })

    bot.on('pre_checkout_query', async data => {
        await bot.answerPreCheckoutQuery(data.id, true);
    })

    bot.on('successful_payment', async data => {
        const targetInvoice = data.successful_payment.invoice_payload;
        const chatId = data.chat.id;
        const name = `${data.chat.first_name} ${data.chat.last_name}`;

        await doc.loadInfo();

        if (targetInvoice === 'subscribe-invoice') {
            const sheet = doc.sheetsByIndex[2]
            await sheet.addRow({
                "ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è": chatId,
                "–§–ò–û": name,
                "TgID": data.chat.username,
                "—Å—É–º–º–∞": '1500',
                "–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ –ø–æ–¥–ø–∏—Å–∫–∏": new Date()
            });

            return bot.sendMessage(
              chatId,
              `–ü–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ –º–æ–∂–µ—Ç–µ –ø–æ–¥—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å, –∞ –∑–∞—Ç–µ–º –æ–ø–ª–∞—Ç–∏—Ç—å —É—Å–ª—É–≥—É`,
              buttonsSub
            );
        }
        if (targetInvoice === 'send-invoice') {
            const {
                articles,
                photo,
                fashion,
                product,
                references,
                hair,
                race,
                productImg,
                acceptResult,
                acceptQuantity,
            } = dataTask;
            const price = (articles * 600) + ((articles * photo) * 40);

            await doc.loadInfo(); // loads document properties and worksheets
            const sheet = doc.sheetsByIndex[3]

            await sheet.addRow({
                "–û—Ç–º–µ—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–∏": new Date(),
                "ID –¢–ó": chatId,
                "–§–ò–û": name,
                "–ö–æ–ª-–≤–æ –∞—Ä—Ç–∏–∫—É–ª–æ–≤": articles ,
                "–ö–æ–ª-–≤–æ —Ñ–æ—Ç–æ": photo,
                "–¶–µ–Ω–∞": price,
                "–ï—Å—Ç—å –ª–∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è –ø–æ —Ñ–æ–Ω—É –∏–ª–∏ –æ–±—Ä–∞–∑—É?": fashion,
                "–ö–∞–∫–æ–π —Ç–æ–≤–∞—Ä?": product,
                "–ï—Å–ª–∏ –µ—Å—Ç—å —Å—Å—ã–ª–∫–∏ –Ω–∞ —Ä–µ—Ñ–µ—Ä–µ–Ω—Å—ã - –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ.": references,
                "–≤–æ–ª–æ—Å—ã –º–æ–¥–µ–ª–∏": hair,
                "—Ä–∞—Å—Å–∞ –º–æ–¥–µ–ª–∏": race,
                "–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ  —Ç–æ–≤–∞—Ä–∞": productImg,
                "–Ø –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é —á—Ç–æ –º–æ–∏ —Ñ–æ—Ç–æ —Å–¥–µ–ª–∞–Ω—ã –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ, —Ç–µ–∫—Å—Ç—É—Ä—É –≤–∏–¥–Ω–æ —Ö–æ—Ä–æ—à–æ, —Ñ–æ–Ω –æ–¥–Ω–æ—Ä–æ–¥–Ω—ã–π.  –ß–µ–º –ª—É—á—à–µ –∏—Å—Ö–æ–¥–Ω–∏–∫ - —Ç–µ–º —Ç–æ—á–Ω–µ–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç.": acceptResult,
                "–Ø –æ—Å–≤–µ–¥–æ–º–ª–µ–Ω —Å —Ç–µ–º, —á—Ç–æ —Ñ–æ—Ç–æ –∏ –∞—Ä—Ç–∏–∫—É–ª—ã —Å –±–æ–ª—å—à–∏–º –∫–æ–ª-–≤–æ–º –¥–µ—Ç–∞–ª–µ–π, —Å–ª–æ–∂–Ω—ã–º–∏ –ø—Ä–∏–Ω—Ç–∞–º–∏- –Ω–µ –±—É–¥—É—Ç –ø–µ—Ä–µ–¥–∞–Ω—ã –≤ —Ç–æ—á–Ω–æ—Å—Ç–∏.": acceptQuantity
            });

            return bot.sendMessage(
              chatId,
              `–ü–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ –º–æ–∂–µ—Ç–µ –ø–æ–¥—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å, –∑–∞–ø–æ–ª–Ω–∏—Ç—å –¢–ó, –∞ –∑–∞—Ç–µ–º –æ–ø–ª–∞—Ç–∏—Ç—å —É—Å–ª—É–≥—É`,
              buttonsDeposit
            );
        }
    })
};

start();

// app.post('/web-data', async (res, req) => {
//     const { queryId, articles, photo } = req.data;
//
//     const price = (articles * 600) + ((articles * photo) * 40);
//     try {
//         await bot.answerWebAppQuery(queryId, {
//             type: 'article',
//             id: queryId,
//             title: '–ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω',
//             input_message_content: {
//                 message_text: `–°—É–º–º–∞ –∑–∞–∫–∞–∑–∞: ${price}`
//             }
//         });
//         // await doc.loadInfo(); // loads document properties and worksheets
//         // const sheet = doc.sheetsByIndex[0]
//         //
//         // await sheet.addRow({
//         //     id: chatId,
//         //     name: `${msg.from.first_name} ${msg.from.last_name}`,
//         //     message: 'task',
//         //     art: articles ,
//         //     photo,
//         //     price
//         // });
//         return res.status(200).json({});
//     } catch (error) {
//         await bot.answerWebAppQuery(queryId, {
//             type: 'article',
//             id: queryId,
//             title: '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑',
//             input_message_content: {
//                 message_text: `–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑`
//             }
//         });
//         return res.status(500).json({});
//     }
// });
//
// const PORT = 8000;
// app.listen(PORT, () => {
//     console.log('Listening on port ' + PORT);
// })